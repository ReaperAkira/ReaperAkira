local currPlayer = game:GetService("Players").LocalPlayer
local servPlayer = game:GetService("Players")
local RunService = game:GetService("RunService")
local currTeams = game:GetService("Teams")

getgenv().Hitbox = {
    Settings = {
        ['hitpart'] = 'Head',
        ['hitsize'] = 5,
        ['transparency'] = 0.60,
        ['color'] =  BrickColor.new("Really blue")
    }
}

function isSameTeam(currTarget)
    if currTarget.team ~= currPlayer.team and currTarget.team ~= currTeams["Neutral"] then
        return false
    else
        return true
    end
end

function isDead(currTarget)
    if
        currTarget == nil or currTarget.Character == nil or
            currTarget.Character:FindFirstChildWhichIsA("Humanoid") == nil or
            currTarget.Character.Humanoid.Health <= 0
     then
        return true
    else
        return false
    end
end

RunService.Stepped:Connect(function()
for _, v in next, servPlayer:GetPlayers() do
    if v ~= currPlayer and not isSameTeam(v) and not isDead(v) then


       
                v.Character[getgenv().Hitbox.Settings.hitpart].Size = Vector3.new(getgenv().Hitbox.Settings.hitsize, getgenv().Hitbox.Settings.hitsize, getgenv().Hitbox.Settings.hitsize)
                v.Character[getgenv().Hitbox.Settings.hitpart].Transparency = getgenv().Hitbox.Settings.transparency
                v.Character[getgenv().Hitbox.Settings.hitpart].BrickColor = BrickColor.new("Really blue")
                v.Character[getgenv().Hitbox.Settings.hitpart].Material = "Neon"
                v.Character[getgenv().Hitbox.Settings.hitpart].CanCollide = false
    end
end
end)